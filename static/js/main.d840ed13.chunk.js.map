{"version":3,"sources":["App/Loading/loadingGif.gif","App/Failure/errorGif.gif","background.jpg","App/Form/Result/styled.js","App/Form/Result/index.js","App/Form/styled.js","App/Form/fetchApiData.js","App/Loading/styled.js","App/Loading/index.js","App/Failure/styled.js","App/Failure/index.js","App/Form/index.js","App/Form/useRatesData.js","App/Form/source.js","App/Clock/styled.js","App/Clock/index.js","App/Clock/useCurrentDate.js","App/styled.js","App/index.js","reportWebVitals.js","GlobalStyle.js","index.js","theme.js"],"names":["module","exports","StyledResult","styled","p","_templateObject","_taggedTemplateLiteral","_ref","theme","colors","tundora","Result","result","React","createElement","Fragment","sourceAmount","toFixed","calculatedAmount","currency","Fieldset","fieldset","gray","_ref2","Legend","legend","_templateObject2","_ref3","_ref4","white","LabelText","span","_templateObject3","_ref5","black","div","_templateObject4","Field","input","_templateObject5","_ref6","_ref7","invalid","css","_templateObject6","_ref8","coffee","StyledButton","button","_templateObject7","_ref9","_ref10","_ref11","dove","_ref12","silver","Info","_templateObject8","_ref13","fetchApiData","async","response","fetch","source","ok","Error","statusText","json","LoadingText","blue","StyledGif","img","Loading","src","loadingGif","alt","red","Failure","Form","setResult","useState","ratesData","useRatesData","setRatesData","status","useEffect","setTimeout","unformatedDate","meta","last_updated_at","formatedDate","Date","toLocaleDateString","undefined","weekday","day","month","year","rates","date","amount","setAmount","setCurrency","onSubmit","event","preventDefault","calculateResult","rate","data","value","onChange","target","type","min","step","required","placeholder","name","as","Object","keys","map","key","StyledClock","Clock","useCurrentDate","setDate","intervalID","setInterval","clearInterval","toLocaleString","hour","minute","second","formatDate","Wrapper","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","GlobalStyle","createGlobalStyle","background","ReactDOM","createRoot","document","getElementById","render","StrictMode","ThemeProvider","breakpoints","mobileMax"],"mappings":"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","file":"static/js/main.d840ed13.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/loadingGif.913270e6.gif\";","module.exports = __webpack_public_path__ + \"static/media/errorGif.e1ffaa37.gif\";","module.exports = __webpack_public_path__ + \"static/media/background.78abde05.jpg\";","import styled from \"styled-components\";\r\n\r\nexport const StyledResult = styled.p`\r\n    color: ${({ theme }) => theme.colors.tundora};\r\n    text-align: center;\r\n    font-size: 20px;\r\n`;","import { StyledResult } from \"./styled\";\r\nimport React from \"react\";\r\n\r\nexport const Result = ({ result }) => (\r\n    <StyledResult>\r\n        {!!result && (\r\n            <>\r\n                {result.sourceAmount.toFixed(2)}&nbsp;PLN&nbsp;=\r\n                {\" \"}\r\n                <strong>\r\n                    {result.calculatedAmount.toFixed(2)}&nbsp;{result.currency}\r\n                </strong>\r\n            </>\r\n        )}\r\n    </StyledResult>\r\n);","import styled, { css } from \"styled-components\";\r\n\r\nexport const Fieldset = styled.fieldset`\r\n    border: 1px solid ${({ theme }) => theme.colors.gray};\r\n    padding: 20px;\r\n    border-radius: 5px;\r\n    margin: 20px 0px;\r\n    box-shadow: 1px 2px 5px;\r\n    color: ${({ theme }) => theme.colors.gray};\r\n    position: relative;\r\n`;\r\n\r\nexport const Legend = styled.legend`\r\n    background-color: ${({ theme }) => theme.colors.tundora};\r\n    color: ${({ theme }) => theme.colors.white}; \r\n    border-radius: 5px;\r\n    padding: 10px;\r\n`;\r\n\r\nexport const LabelText = styled.span`\r\n    width: 100%;\r\n    max-width: 200px;\r\n    display: inline-block;\r\n    margin-right: 5px;\r\n    color: ${({ theme }) => theme.colors.black};\r\n`;\r\n\r\nexport const StyledResult = styled.div`\r\n    height: 90px;\r\n`;\r\n\r\nexport const Field = styled.input`\r\n    border: 1px solid;\r\n    padding: 10px;\r\n    width: 100%;\r\n    max-width: 300px;\r\n    border-radius: 5px;\r\n    box-shadow: 1px 2px 5px;\r\n    color: ${({ theme }) => theme.colors.tundora};\r\n\r\n    ${({ invalid }) => invalid && css`\r\n        background-color: ${({ theme }) => theme.colors.coffee};\r\n    `}\r\n`;\r\n\r\nexport const StyledButton = styled.button`\r\n    width: 100%;\r\n    border: none;\r\n    background-color: ${({ theme }) => theme.colors.tundora};\r\n    color: ${({ theme }) => theme.colors.white};  \r\n    padding: 10px;  \r\n    border-radius: 5px;\r\n    transition: 0.4s;\r\n\r\n    &:hover {\r\n        background-color: ${({ theme }) => theme.colors.dove};\r\n        transform: scale(1.01);\r\n    }\r\n\r\n    &:active {\r\n        background-color: ${({ theme }) => theme.colors.silver};\r\n    }\r\n`;\r\n\r\nexport const Info = styled.p`\r\n    color: ${({ theme }) => theme.colors.tundora};\r\n    text-align: center;\r\n    font-size: 10px;\r\n`;\r\n\r\n// export const Loading = styled.p`\r\n//     color: ${({ theme }) => theme.colors.blue};\r\n// `;\r\n\r\n// export const Failure = styled.p`\r\n//     color: ${({ theme }) => theme.colors.red};\r\n// `;","export const fetchApiData = async (source) => {\r\n    const response = await fetch(source);\r\n\r\n    if (!response.ok) {\r\n        throw new Error(response.statusText);\r\n    }\r\n\r\n    return await response.json();\r\n};","import styled from \"styled-components\";\r\n\r\nexport const LoadingText = styled.p`\r\n    text-align: center;\r\n    margin: 10px;\r\n    color: ${({ theme }) => theme.colors.blue};\r\n    height: 106px;\r\n`;\r\n\r\nexport const StyledGif = styled.img`\r\n    width: 50px;\r\n    height: 50px;\r\n    position: absolute;\r\n    top: 75%;\r\n    left: 50%;\r\n    transform: translate(-50%, -50%);\r\n`;","import { LoadingText, StyledGif } from \"./styled\";\r\nimport loadingGif from \"./loadingGif.gif\";\r\nimport React from \"react\";\r\n\r\nexport const Loading = () => {\r\n\r\n    return (\r\n        <div>\r\n            <>\r\n                <LoadingText>\r\n                    Wait a minute...⏱<br />There are just loading currency rates from public API\r\n                </LoadingText>\r\n                <StyledGif src={loadingGif} alt=\"alternative text\" />\r\n            </>\r\n        </div>\r\n    );\r\n};","import styled from \"styled-components\";\r\n\r\nexport const LoadingText = styled.p`\r\n    text-align: center;\r\n    margin: 10px;\r\n    color: ${({ theme }) => theme.colors.red};\r\n    height: 106px;\r\n`;\r\n\r\nexport const StyledGif = styled.img`\r\n    width: 50px;\r\n    height: 50px;\r\n    position: absolute;\r\n    top: 80%;\r\n    left: 50%;\r\n    transform: translate(-50%, -50%);\r\n`;","import { LoadingText, StyledGif } from \"./styled\";\r\nimport loadingGif from \"./errorGif.gif\";\r\nimport React from \"react\";\r\n\r\nexport const Failure = () => {\r\n\r\n    return (\r\n        <div>\r\n            <>\r\n                <LoadingText>\r\n                    Oops...<br />Something went wrong...🤷‍♂️ Please check your internet connection\r\n                </LoadingText>\r\n                <StyledGif src={loadingGif} alt=\"alternative text\" />\r\n            </>\r\n        </div>\r\n    )\r\n};","import { useState } from \"react\";\r\nimport { Result } from \"./Result\";\r\nimport React from \"react\";\r\nimport { Field, Fieldset, LabelText, Legend, StyledButton, Info, StyledResult } from \"./styled\";\r\nimport { useRatesData } from \"./useRatesData\";\r\nimport { Loading } from \"../Loading\";\r\nimport { Failure } from \"../Failure\";\r\n\r\nexport const Form = () => {\r\n    const [result, setResult] = useState();\r\n    const ratesData = useRatesData();\r\n\r\n    const calculateResult = (currency, amount) => {\r\n        const rate = ratesData.rates.data[currency].value;\r\n\r\n        setResult({\r\n            sourceAmount: +amount,\r\n            calculatedAmount: amount * rate,\r\n            currency,\r\n        });\r\n    };\r\n\r\n    const [amount, setAmount] = useState(\"\");\r\n    const [currency, setCurrency] = useState(\"EUR\");\r\n\r\n    const onFormSubmit = (event) => {\r\n        event.preventDefault();\r\n        calculateResult(currency, amount);\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={onFormSubmit}>\r\n            <Fieldset>\r\n                <p>Required field is marked *</p>\r\n                <Legend>Currency converter</Legend>\r\n                {ratesData.status === \"loading\"\r\n                    ? (\r\n                        <Loading />\r\n                    )\r\n                    : (\r\n                        ratesData.status === \"error\"\r\n                            ? (\r\n                                <Failure />\r\n                            )\r\n                            : (\r\n                                <>\r\n                                    <p>\r\n                                        <label>\r\n                                            <LabelText>\r\n                                                Amount in PLN*:\r\n                                            </LabelText>\r\n                                            <Field\r\n                                                value={amount}\r\n                                                onChange={({ target }) => setAmount(target.value)}\r\n                                                type=\"number\"\r\n                                                min=\"1\"\r\n                                                step=\"any\"\r\n                                                required\r\n                                                placeholder=\"Enter amount\"\r\n                                                name=\"enteredAmount\"\r\n                                            />\r\n                                        </label>\r\n                                    </p>\r\n                                    <p>\r\n                                        <label>\r\n                                            <LabelText>\r\n                                                Select currency:\r\n                                            </LabelText>\r\n                                            <Field\r\n                                                as=\"select\"\r\n                                                value={currency}\r\n                                                onChange={({ target }) => setCurrency(target.value)}\r\n                                                required\r\n                                                name=\"selectedCurrency\"\r\n                                            >\r\n                                                {Object.keys(ratesData.rates.data).map(((rates) => (\r\n                                                    <option\r\n                                                        key={rates}\r\n                                                        value={rates}\r\n                                                    >\r\n                                                        {rates}\r\n                                                    </option>\r\n                                                )))}\r\n                                            </Field>\r\n                                        </label>\r\n                                    </p>\r\n                                </>\r\n                            )\r\n                    )\r\n                }\r\n\r\n            </Fieldset>\r\n            <StyledResult>\r\n                <StyledButton>Calculate</StyledButton>\r\n                <Info>\r\n                    Currency rates are coming from CurrencyAPI. Updated on: <strong>{ratesData.date}</strong>\r\n                </Info>\r\n                <Result result={result} />\r\n            </StyledResult>\r\n        </form>\r\n    );\r\n};\r\n\r\n","import { useEffect, useState } from \"react\";\r\nimport { fetchApiData } from \"./fetchApiData\";\r\nimport { source } from \"./source\";\r\n\r\nexport const useRatesData = () => {\r\n    const [ratesData, setRatesData] = useState({\r\n        status: \"loading\",\r\n    });\r\n\r\n\r\n    useEffect(() => {\r\n        const fetchRates = async () => {\r\n            try {\r\n                const currency = await fetchApiData(source);\r\n\r\n                const data = await fetchApiData(source);\r\n\r\n                const unformatedDate = data.meta.last_updated_at;\r\n                const formatedDate = new Date(unformatedDate).toLocaleDateString(undefined, {\r\n                    weekday: \"long\",\r\n                    day: \"numeric\",\r\n                    month: \"long\",\r\n                    year: \"numeric\",\r\n                });\r\n\r\n                setRatesData({\r\n                    status: \"success\",\r\n                    rates: currency,\r\n                    date: formatedDate,\r\n                });\r\n\r\n            } catch {\r\n                setRatesData({\r\n                    status: \"error\",\r\n                });\r\n            }\r\n        };\r\n\r\n        setTimeout(fetchRates, 2000);\r\n    }, []);\r\n\r\n    return ratesData;\r\n};","export const source = \"currency.json\";\r\n\r\n//export const source = \"currency-conventer-react/currency.json\";","import { styled } from \"styled-components\";\r\n\r\nexport const StyledClock = styled.div`\r\n    color: ${({ theme }) => theme.colors.tundora};\r\n    text-align: right;\r\n    font-size: 10px;\r\n    font-family: 'Courier New', Courier, monospace;    \r\n`;","import { useCurrentDate } from \"./useCurrentDate\";\r\nimport { StyledClock } from \"./styled\";\r\nimport React from \"react\";\r\n\r\nconst formatDate = (date) => date.toLocaleString(undefined, {\r\n    weekday: \"long\",\r\n    day: \"numeric\",\r\n    month: \"long\",\r\n    year: \"numeric\",\r\n    hour: \"numeric\",\r\n    minute: \"numeric\",\r\n    second: \"numeric\",\r\n});\r\n\r\nexport const Clock = () => {\r\n    const date = useCurrentDate();\r\n\r\n    return (\r\n        <StyledClock>\r\n            Dzisiaj jest:\r\n            {\" \"}\r\n            {formatDate(date)}\r\n        </StyledClock>\r\n    );\r\n};","import { useEffect, useState } from \"react\";\r\n\r\nexport const useCurrentDate = () => {\r\n    const [date, setDate] = useState(new Date());\r\n\r\n    useEffect(() => {\r\n        const intervalID = setInterval(() => {\r\n            setDate(new Date());\r\n        }, 1000);\r\n\r\n        return () => {\r\n            clearInterval(intervalID);\r\n        };\r\n    }, []);\r\n\r\n    return date;\r\n};","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n    flex-basis: 600px;\r\n    margin: 20px auto;\r\n    padding: 20px;\r\n    background-color: ${({ theme }) => theme.colors.white};\r\n    border-radius: 5px;    \r\n`;","import { Form } from \"./Form\";\r\nimport { Clock } from \"./Clock\";\r\nimport React from \"react\";\r\nimport { Wrapper } from \"./styled\";\r\n\r\nfunction App() {\r\n    return (\r\n        <Wrapper>\r\n            <Clock />\r\n            <Form />\r\n        </Wrapper>\r\n    );\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createGlobalStyle } from \"styled-components\";\r\nimport background from \"./background.jpg\";\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n    html {\r\n    box-sizing: border-box;\r\n    }\r\n\r\n    *, ::after, ::before {\r\n    box-sizing: inherit;\r\n    }\r\n\r\n    #root {\r\n    font-family: 'Montserrat', sans-serif;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    min-height: 100vh;\r\n    background-image: url(\"${background}\");\r\n    background-repeat: no-repeat;\r\n    background-position: center;\r\n    background-size: cover;\r\n    }\r\n\r\n    button {\r\n        cursor: pointer;\r\n    }\r\n`;","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { GlobalStyle } from './GlobalStyle';\nimport { theme } from './theme';\nimport { ThemeProvider } from 'styled-components';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <GlobalStyle />\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","export const theme = {\r\n    colors: {\r\n        white: \"#ffffff\",\r\n        black: \"#000000\",\r\n        tundora: \"#4d4d4d\",\r\n        coffee: \"#d9d3d3\",\r\n        dove: \"#666666\",\r\n        gray: \"#808080\",\r\n        silver: \"#bdbdbd\",\r\n        blue: \"#3994ef\",\r\n        red: \"#fe2a34\",\r\n    },\r\n    breakpoints: {\r\n        mobileMax: 767,\r\n    },\r\n};"],"sourceRoot":""}