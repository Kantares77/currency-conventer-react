{"version":3,"sources":["background.jpg","App/currencies.js","App/Form/Result/styled.js","App/Form/Result/index.js","App/Form/styled.js","App/Form/index.js","App/Clock/styled.js","App/Clock/index.js","App/Clock/useCurrentDate.js","App/styled.js","App/index.js","reportWebVitals.js","globalStyles.js","index.js","theme.js"],"names":["module","exports","currencies","short","name","rate","ViewResult","styled","p","_templateObject","_taggedTemplateLiteral","_ref","theme","colors","tundora","Result","result","React","createElement","Fragment","enteredAmount","toFixed","calculatedAmount","currency","StyledForm","form","StyledText","span","_templateObject2","black","StyledResult","div","_templateObject3","StyledField","input","_templateObject4","_ref2","_ref3","coffee","StyledButton","button","_templateObject5","_ref4","_ref5","white","_ref6","dove","_ref7","silver","StyledFieldset","fieldset","_templateObject6","_ref8","gray","_ref9","StyledLegend","legend","_templateObject7","_ref10","_ref11","Form","amount","setAmount","useState","setCurrency","setResult","onSubmit","event","preventDefault","calculateResult","find","value","onChange","target","type","min","step","required","placeholder","as","map","key","StyledClock","Clock","date","useCurrentDate","setDate","Date","useEffect","intervalId","setInterval","clearInterval","toLocaleString","undefined","weekday","day","month","year","hour","minute","second","dateFormat","Container","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","GlobalStyle","createGlobalStyle","background","ReactDOM","createRoot","document","getElementById","render","StrictMode","ThemeProvider"],"mappings":"8HAAAA,EAAOC,QAAU,IAA0B,wC,+GCApC,MAAMC,EAAa,CACtB,CACIC,MAAO,MACPC,KAAM,cACNC,KAAM,MAEV,CACIF,MAAO,MACPC,KAAM,gBACNC,KAAM,MAEV,CACIF,MAAO,MACPC,KAAM,OACNC,KAAM,MAEV,CACIF,MAAO,MACPC,KAAM,cACNC,KAAM,O,oBCjBP,MAAMC,EAAaC,IAAOC,EAACC,MAAAC,YAAA,yEACrBC,IAAA,IAAC,MAAEC,GAAOD,EAAA,OAAKC,EAAMC,OAAOC,UCA5BC,EAASJ,IAAA,IAAC,OAAEK,GAAQL,EAAA,OAC7BM,IAAAC,cAACZ,EAAU,OACJU,GACCC,IAAAC,cAAAD,IAAAE,SAAA,KACKH,EAAOI,cAAcC,QAAQ,GAAG,eAChC,IACDJ,IAAAC,cAAA,cACKF,EAAOM,iBAAiBD,QAAQ,GAAG,OAAOL,EAAOO,a,kBCR/D,MAAMC,EAAajB,IAAOkB,KAAIhB,MAAAC,YAAA,UAGxBgB,EAAanB,IAAOoB,KAAIC,MAAAlB,YAAA,uHAKxBC,IAAA,IAAC,MAAEC,GAAOD,EAAA,OAAKC,EAAMC,OAAOgB,QAG5BC,EAAevB,IAAOwB,IAAGC,MAAAtB,YAAA,6BAIzBuB,EAAc1B,IAAO2B,MAAKC,MAAAzB,YAAA,gOAO1B0B,IAAA,IAAC,MAAExB,GAAOwB,EAAA,OAAKxB,EAAMC,OAAOC,SAGbuB,IAAA,IAAC,MAAEzB,GAAOyB,EAAA,OAAKzB,EAAMC,OAAOyB,SAI3CC,EAAehC,IAAOiC,OAAMC,MAAA/B,YAAA,qTAGjBgC,IAAA,IAAC,MAAE9B,GAAO8B,EAAA,OAAK9B,EAAMC,OAAOC,SACvC6B,IAAA,IAAC,MAAE/B,GAAO+B,EAAA,OAAK/B,EAAMC,OAAO+B,OAMbC,IAAA,IAAC,MAAEjC,GAAOiC,EAAA,OAAKjC,EAAMC,OAAOiC,MAK5BC,IAAA,IAAC,MAAEnC,GAAOmC,EAAA,OAAKnC,EAAMC,OAAOmC,SAI3CC,EAAiB1C,IAAO2C,SAAQC,MAAAzC,YAAA,wJACrB0C,IAAA,IAAC,MAAExC,GAAOwC,EAAA,OAAKxC,EAAMC,OAAOwC,MAKvCC,IAAA,IAAC,MAAE1C,GAAO0C,EAAA,OAAK1C,EAAMC,OAAOwC,OAG5BE,EAAehD,IAAOiD,OAAMC,MAAA/C,YAAA,oGACjBgD,IAAA,IAAC,MAAE9C,GAAO8C,EAAA,OAAK9C,EAAMC,OAAOC,SACvC6C,IAAA,IAAC,MAAE/C,GAAO+C,EAAA,OAAK/C,EAAMC,OAAO+B,QCvD5BgB,EAAOA,KAChB,MAAOC,EAAQC,GAAaC,mBAAS,KAC9BxC,EAAUyC,GAAeD,mBAAS7D,EAAW,GAAGC,QAChDa,EAAQiD,GAAaF,qBAiB5B,OACI9C,IAAAC,cAACM,EAAU,CAAC0C,SANMC,IAClBA,EAAMC,iBAXcC,EAAC9C,EAAUsC,KAC/B,MAAMxD,EAAOH,EAAWoE,KAAK3D,IAAA,IAAC,MAAER,GAAOQ,EAAA,OAAKR,IAAUoB,IAAUlB,KAEhE4D,EAAU,CACN7C,eAAgByC,EAChBvC,iBAAkBuC,EAASxD,EAC3BkB,cAMJ8C,CAAgB9C,EAAUsC,KAKtB5C,IAAAC,cAAC+B,EAAc,KACXhC,IAAAC,cAAA,SAAG,8BACHD,IAAAC,cAACqC,EAAY,KAAC,sBACdtC,IAAAC,cAAA,SACID,IAAAC,cAAA,aACID,IAAAC,cAACQ,EAAU,KAAC,yBAGZT,IAAAC,cAACe,EAAW,CACRsC,MAAOV,EACPW,SAAUpC,IAAA,IAAC,OAAEqC,GAAQrC,EAAA,OAAK0B,EAAUW,EAAOF,QAC3CG,KAAK,SACLC,IAAI,IACJC,KAAK,MACLC,UAAQ,EACRC,YAAY,eACZ1E,KAAK,oBAIjBa,IAAAC,cAAA,SACID,IAAAC,cAAA,aACID,IAAAC,cAACQ,EAAU,KAAC,oBAGZT,IAAAC,cAACe,EAAW,CAAC8C,GAAG,SACZR,MAAOhD,EACPiD,SAAUnC,IAAA,IAAC,OAAEoC,GAAQpC,EAAA,OAAK2B,EAAYS,EAAOF,QAC7CM,UAAQ,EACRzE,KAAK,oBAEJF,EAAW8E,IAAKzD,GACbN,IAAAC,cAAA,UACI+D,IAAK1D,EAASpB,MACdoE,MAAOhD,EAASpB,OAEfoB,EAASnB,WAOlCa,IAAAC,cAACY,EAAY,KACTb,IAAAC,cAACqB,EAAY,KAAC,aACdtB,IAAAC,cAACH,EAAM,CAACC,OAAQA,O,MCvEzB,MAAMkE,EAAc3E,IAAOC,EAACC,MAAAC,YAAA,iIACtBC,IAAA,IAAC,MAAEC,GAAOD,EAAA,OAAKC,EAAMC,OAAOC,UCC5BqE,EAAQA,KACjB,MAAMC,ECHoBC,MAC1B,MAAOD,EAAME,GAAWvB,mBAAS,IAAIwB,MAYrC,OAVAC,oBAAU,KACN,MAAMC,EAAaC,YAAY,KAC3BJ,EAAQ,IAAIC,OACb,KAEH,MAAO,KACHI,cAAcF,KAEnB,IAEIL,GDVMC,GAYb,OACIpE,IAAAC,cAACgE,EAAW,KAAC,gBAER,IAbWE,IAASA,EAAKQ,oBAAeC,EAAW,CACxDC,QAAS,OACTC,IAAK,UACLC,MAAO,OACPC,KAAM,UACNC,KAAM,UACNC,OAAQ,UACRC,OAAQ,YAOHC,CAAWjB,K,MEnBjB,MAAMkB,EAAY/F,IAAOwB,IAAGtB,MAAAC,YAAA,sIAIXC,IAAA,IAAC,MAAEC,GAAOD,EAAA,OAAKC,EAAMC,OAAO+B,QCQrC2D,MATf,WACI,OACItF,IAAAC,cAACoF,EAAS,KACNrF,IAAAC,cAACiE,EAAK,MACNlE,IAAAC,cAAC0C,EAAI,QCGF4C,I,EAAAA,EAZSC,IAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,KAAKhG,IAAkD,IAAjD,OAAEiG,EAAM,OAAEC,EAAM,OAAEC,EAAM,OAAEC,EAAM,QAAEC,GAASrG,EACpEiG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,M,iBCJP,MAAMQ,EAAcC,YAAiBzG,MAAAC,YAAA,idAefyG,KCVhBC,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHvG,IAAAC,cAACD,IAAMwG,WAAU,KACfxG,IAAAC,cAACwG,IAAa,CAAC9G,MCXE,CACjBC,OAAQ,CACJ+B,MAAO,UACPf,MAAO,UACPf,QAAS,UACTwB,OAAQ,UACRQ,KAAM,UACNO,KAAM,UACNL,OAAQ,aDIV/B,IAAAC,cAAC+F,EAAW,MACZhG,IAAAC,cAACqF,EAAG,SAQVC,M","file":"static/js/main.782fd535.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/background.78abde05.jpg\";","export const currencies = [\r\n    {\r\n        short: \"USD\",\r\n        name: \"U.S. Dollar\",\r\n        rate: 3.99,\r\n    },\r\n    {\r\n        short: \"GBP\",\r\n        name: \"British Pound\",\r\n        rate: 5.04,\r\n    },\r\n    {\r\n        short: \"EUR\",\r\n        name: \"Euro\",\r\n        rate: 4.32,\r\n    },\r\n    {\r\n        short: \"CHF\",\r\n        name: \"Swiss franc\",\r\n        rate: 4.54,\r\n    },\r\n];","import styled from \"styled-components\";\r\n\r\nexport const ViewResult = styled.p`\r\n    color: ${({ theme }) => theme.colors.tundora};\r\n    text-align: center;\r\n    font-size: 17px;\r\n`;","import { ViewResult } from \"./styled\";\r\nimport React from \"react\";\r\n\r\nexport const Result = ({ result }) => (\r\n    <ViewResult>\r\n        {!!result && (\r\n            <>\r\n                {result.enteredAmount.toFixed(2)}&nbsp;PLN&nbsp;=\r\n                {\" \"}\r\n                <strong>\r\n                    {result.calculatedAmount.toFixed(2)}&nbsp;{result.currency}\r\n                </strong>\r\n            </>\r\n        )}\r\n    </ViewResult>\r\n);","import styled from \"styled-components\";\r\n\r\nexport const StyledForm = styled.form`\r\n`;\r\n\r\nexport const StyledText = styled.span`\r\n    width: 100%;\r\n    max-width: 200px;\r\n    display: inline-block;\r\n    margin-right: 5px;\r\n    color: ${({ theme }) => theme.colors.black};\r\n`;\r\n\r\nexport const StyledResult = styled.div`\r\n    height: 90px;\r\n`;\r\n\r\nexport const StyledField = styled.input`\r\n    border: 1px solid;\r\n    padding: 10px;\r\n    width: 100%;\r\n    max-width: 300px;\r\n    border-radius: 5px;\r\n    box-shadow: 1px 2px 5px;\r\n    color: ${({ theme }) => theme.colors.tundora};\r\n\r\n    &:invalid {\r\n        background-color: ${({ theme }) => theme.colors.coffee};\r\n    }\r\n`;\r\n\r\nexport const StyledButton = styled.button`\r\n    width: 100%;\r\n    border: none;\r\n    background-color: ${({ theme }) => theme.colors.tundora};\r\n    color: ${({ theme }) => theme.colors.white};  \r\n    padding: 10px;  \r\n    border-radius: 5px;\r\n    transition: 0.4s;\r\n\r\n    &:hover {\r\n        background-color: ${({ theme }) => theme.colors.dove};\r\n        transform: scale(1.01);\r\n    }\r\n\r\n    &:active {\r\n        background-color: ${({ theme }) => theme.colors.silver};\r\n    }\r\n`;\r\n\r\nexport const StyledFieldset = styled.fieldset`\r\n    border: 1px solid ${({ theme }) => theme.colors.gray};\r\n    padding: 20px;\r\n    border-radius: 5px;\r\n    margin: 20px 0px;\r\n    box-shadow: 1px 2px 5px;\r\n    color: ${({ theme }) => theme.colors.gray};\r\n`;\r\n\r\nexport const StyledLegend = styled.legend`\r\n    background-color: ${({ theme }) => theme.colors.tundora};\r\n    color: ${({ theme }) => theme.colors.white}; \r\n    border-radius: 5px;\r\n    padding: 10px;\r\n`;","import { useState } from \"react\";\r\nimport { currencies } from \"../currencies\";\r\nimport { Result } from \"./Result\";\r\nimport React from \"react\";\r\nimport { StyledButton, StyledField, StyledFieldset, StyledForm, StyledLegend, StyledResult, StyledText } from \"./styled\";\r\n\r\nexport const Form = () => {\r\n    const [amount, setAmount] = useState(\"\");\r\n    const [currency, setCurrency] = useState(currencies[0].short);\r\n    const [result, setResult] = useState();\r\n\r\n    const calculateResult = (currency, amount) => {\r\n        const rate = currencies.find(({ short }) => short === currency).rate;\r\n\r\n        setResult({\r\n            enteredAmount: +amount,\r\n            calculatedAmount: amount / rate,\r\n            currency,\r\n        });\r\n    };\r\n\r\n    const onFormSubmit = (event) => {\r\n        event.preventDefault();\r\n        calculateResult(currency, amount);\r\n    };\r\n\r\n    return (\r\n        <StyledForm onSubmit={onFormSubmit}>\r\n            <StyledFieldset>\r\n                <p>Required field is marked *</p>\r\n                <StyledLegend>Currency converter</StyledLegend>\r\n                <p>\r\n                    <label>\r\n                        <StyledText>\r\n                            Enter amount in PLN*:\r\n                        </StyledText>\r\n                        <StyledField\r\n                            value={amount}\r\n                            onChange={({ target }) => setAmount(target.value)}\r\n                            type=\"number\"\r\n                            min=\"1\"\r\n                            step=\"any\"\r\n                            required\r\n                            placeholder=\"Enter amount\"\r\n                            name=\"enteredAmount\"\r\n                        />\r\n                    </label>\r\n                </p>\r\n                <p>\r\n                    <label>\r\n                        <StyledText>\r\n                            Select currency:\r\n                        </StyledText>\r\n                        <StyledField as=\"select\"\r\n                            value={currency}\r\n                            onChange={({ target }) => setCurrency(target.value)}\r\n                            required\r\n                            name=\"selectedCurrency\"\r\n                        >\r\n                            {currencies.map((currency => (\r\n                                <option\r\n                                    key={currency.short}\r\n                                    value={currency.short}\r\n                                >\r\n                                    {currency.name}\r\n                                </option>\r\n                            )))}\r\n                        </StyledField>\r\n                    </label>\r\n                </p>\r\n            </StyledFieldset>\r\n            <StyledResult>\r\n                <StyledButton>Calculate</StyledButton>\r\n                <Result result={result} />\r\n            </StyledResult>\r\n        </StyledForm>\r\n    );\r\n};","import { styled } from \"styled-components\";\r\n\r\nexport const StyledClock = styled.p`\r\n    color: ${({ theme }) => theme.colors.tundora};\r\n    text-align: right;\r\n    font-size: 10px;\r\n    font-family: 'Courier New', Courier, monospace;    \r\n`;","import { useCurrentDate } from \"./useCurrentDate\";\r\nimport { StyledClock } from \"./styled\";\r\nimport React from \"react\";\r\n\r\nexport const Clock = () => {\r\n    const date = useCurrentDate();\r\n\r\n    const dateFormat = (date) => date.toLocaleString(undefined, {\r\n        weekday: \"long\",\r\n        day: \"numeric\",\r\n        month: \"long\",\r\n        year: \"numeric\",\r\n        hour: \"numeric\",\r\n        minute: \"numeric\",\r\n        second: \"numeric\",\r\n    });\r\n\r\n    return (\r\n        <StyledClock>\r\n            Dzisiaj jest:\r\n            {\" \"}\r\n            {dateFormat(date)}\r\n        </StyledClock>\r\n    );\r\n};","import { useEffect, useState } from \"react\";\r\n\r\nexport const useCurrentDate = () => {\r\n    const [date, setDate] = useState(new Date());\r\n\r\n    useEffect(() => {\r\n        const intervalId = setInterval(() => {\r\n            setDate(new Date());\r\n        }, 1000);\r\n\r\n        return () => {\r\n            clearInterval(intervalId);\r\n        };\r\n    }, []);\r\n\r\n    return date;\r\n};","import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n    flex-basis: 600px;\r\n    margin: 20px auto;\r\n    padding: 20px;\r\n    background-color: ${({ theme }) => theme.colors.white};\r\n    border-radius: 5px;    \r\n`;","import { Form } from \"./Form\";\r\nimport { Clock } from \"./Clock\";\r\nimport React from \"react\";\r\nimport { Container } from \"./styled\";\r\n\r\nfunction App() {\r\n    return (\r\n        <Container>\r\n            <Clock />\r\n            <Form />\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createGlobalStyle } from \"styled-components\";\r\nimport background from \"./background.jpg\";\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n    html {\r\n    box-sizing: border-box;\r\n    }\r\n\r\n    *, ::after, ::before {\r\n    box-sizing: inherit;\r\n    }\r\n\r\n    #root {\r\n    font-family: 'Montserrat', sans-serif;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    min-height: 100vh;\r\n    background-image: url(\"${background}\");\r\n    background-repeat: no-repeat;\r\n    background-position: center;\r\n    background-size: cover;\r\n    }\r\n\r\n    button {\r\n    cursor: pointer;\r\n    }\r\n`;","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { GlobalStyle } from './globalStyles';\nimport { theme } from './theme';\nimport { ThemeProvider } from 'styled-components';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <GlobalStyle />\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","export const theme = {\r\n    colors: {\r\n        white: \"#ffffff\",\r\n        black: \"#000000\",\r\n        tundora: \"#4d4d4d\",\r\n        coffee: \"#d9d3d3\",\r\n        dove: \"#666666\",\r\n        gray: \"#808080\",\r\n        silver: \"#bdbdbd\",\r\n    },\r\n};"],"sourceRoot":""}